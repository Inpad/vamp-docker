vamp {

  rest-api {
    interface = 0.0.0.0
    host = localhost
    port = 8080
  }

  persistence {
    response-timeout = 5

    database {
      type: "elasticsearch"
      elasticsearch.url = ${vamp.pulse.elasticsearch.url}
    }

    key-value-store {
      type = "etcd"
      etcd.url = "http://etcd-client:2379"
    }
  }

  container-driver {
    type = "kubernetes"
    kubernetes {
      url = "https://kubernetes"
      service-type = "LoadBalancer"
      create-services = true
      vamp-gateway-agent-id = "vamp-gateway-agent"
    }
  }

  gateway-driver {

    haproxy.version = "1.6"

    logstash {
      host = "logstash"
      index = "logstash-*"
    }

    kibana {
      enabled = true
      elasticsearch.url = ${vamp.pulse.elasticsearch.url}
      synchronization.period  = 5
    }

    aggregation {
      window = 30
      period = 5
    }
  }

  workflow-driver.type = "none"

  pulse {
    elasticsearch {
      url = "http://elasticsearch:9200"
      index {
        name = "vamp-pulse"
        time-format.event = "YYYY-MM-dd"
      }
    }
  }

  operation {

    synchronization {
      period = 3
      timeout {
        ready-for-deployment: 86400
        ready-for-undeployment: 86400
      }
    }
    sla.period = 5
    escalation.period = 5

    deployment {

      scale {
        instances: 1
        cpu: 0.1
        memory: 128MB
      }

      arguments: [
        "privileged=true"
      ]
    }
  }

  lifter {

    pulse.enabled = true

    kibana.enabled = true

    persistence.enabled = true

    vamp-gateway-agent {

      enabled = true

      synchronization {

        id = "vamp-gateway-agent"

        kubernetes.service-type = "LoadBalancer"

        container-ports = [ 80 ]
        container-image: "magneticio/vamp-gateway-agent:1.6.4-0.9.0"
        container-arguments: ["--storeType=etcd", "--storeConnection="${vamp.persistence.key-value-store.etcd.url}, "--storeKey=/vamp/haproxy/"${vamp.gateway-driver.haproxy.version}, "--logstashHost="${vamp.gateway-driver.logstash.host}]
      }
    }
  }
}
