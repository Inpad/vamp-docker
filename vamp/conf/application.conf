vamp {

  rest-api {
    interface = 0.0.0.0
    host = localhost
    port = 8080
    port = ${?VAMP_REST_API_PORT}
  }

  persistence {
    response-timeout = 5 # seconds

    database {
      type: "elasticsearch" # elasticsearch or in-memory
      elasticsearch.url = ${vamp.pulse.elasticsearch.url}
    }

    key-value-store {
      type = "zookeeper"  # zookeeper, etcd or consul

      zookeeper {
        servers = "" # e.g. 192.168.99.100:2181
        servers = ${?VAMP_PERSISTENCE_KEY_VALUE_STORE_ZOOKEEPER_SERVERS}
      }

      etcd {
        url = "" # e.g. http://192.168.99.100:2379
      }

      consul {
        url = "" # e.g. http://192.168.99.100:8500
      }
    }
  }

  container-driver {
    type = "marathon" # docker or marathon
    mesos.url = "" # e.g. http://192.168.99.100:5050
    mesos.url = ${?VAMP_CONTAINER_DRIVER_MESOS_URL}
    marathon.url = "" # e.g. http://192.168.99.100:8080
    marathon.url = ${?VAMP_CONTAINER_DRIVER_MARATHON_URL}
  }

  gateway-driver {
    host = "0.0.0.0" # e.g. 192.168.99.100

    haproxy {
      version = "1.6" # 1.5 or 1.6
    }

    logstash {
      host = ""
      host = ${?VAMP_GATEWAY_DRIVER_LOGSTASH_HOST}
      index = "logstash-*"
    }

    kibana {
      enabled = true
      elasticsearch.url = ${vamp.pulse.elasticsearch.url}
      synchronization.period  = 5 # seconds, synchronization will be active only if period is greater than 0
    }

    aggregation {
      window = 30 # seconds
      period = 5  # refresh period in seconds, aggregation will be active only if greater than 0
    }
  }

  workflow-driver {
    type = "none" # chronos or none

    chronos {
      url = "" # e.g. 192.168.99.100:4400
    }
  }

  pulse {
    elasticsearch {
      url = "" # e.g. http://192.168.99.100:9200
      url = ${?VAMP_PULSE_ELASTICSEARCH_URL}
      index {
        name = "vamp-pulse"
        time-format.event = "YYYY-MM-dd"
      }
    }
  }

  operation {
    synchronization {
      period = 3 # seconds, synchronization will be active only if period is greater than 0
      timeout {
        ready-for-deployment: 86400 # seconds
        ready-for-undeployment: 86400 # seconds
      }
    }
    sla.period = 5 # seconds, sla monitor period
    escalation.period = 5 # seconds, escalation monitor period

    deployment {

      scale {
        instances: 1
        cpu: 0.1
        memory: 128MB
      }

      arguments: [
        "privileged=true"
        #"security-opt=seccomp:unconfined"
      ]
    }

    workflow {
      container-image: "" # "magneticio/vamp-workflow-agent:0.8.5"
      command: "" # e.g. "/opt/vamp/vamp-workflow-agent --storeType=zookeeper --storeConnection=127.0.0.1:2181 --elasticsearchConnection=http://localhost:9200"
    }
  }

  lifter {

    pulse.enabled = true

    kibana.enabled = true

    persistence.enabled = true

    vamp-gateway-agent {

      enabled = false
      enabled = ${?VAMP_LIFTER_VAMP_GATEWAY_AGENT_ENABLED}

      synchronization {

        id = ${?VAMP_LIFTER_VAMP_GATEWAY_AGENT_ID}

        initial-delay = 5 # seconds
        period = 30 # seconds, synchronization will be active only if period is greater than 0

        container-image: "magneticio/vamp-gateway-agent:1.6.4-0.8.5"
        container-arguments: []
        container-arguments: ["--storeType=zookeeper", "--storeConnection="${vamp.persistence.key-value-store.zookeeper.servers}, "--storeKey=/vamp/haproxy/"${vamp.gateway-driver.haproxy.version}, "--logstashHost="${vamp.gateway-driver.logstash.host}]
      }
    }
  }
}
